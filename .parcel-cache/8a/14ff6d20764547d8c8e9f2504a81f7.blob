var _parcelHelpers = require("@parcel/transformer-js/lib/esmodule-helpers.js");
_parcelHelpers.defineInteropFlag(exports);
var _imgIconsSvg = require('../img/icons.svg');
var _imgIconsSvgDefault = _parcelHelpers.interopDefault(_imgIconsSvg);
var _fractional = require('fractional');
class RecipeView {
  parentElement = document.querySelector('.recipe');
  data;
  render(data) {
    this.data = data;
    const html = this.generateMarkup();
    this.clear();
    this.parentElement.insertAdjacentHTML('afterbegin', html);
  }
  clear() {
    this.parentElement.innerHTML = '';
  }
  renderSpinner = function () {
    const spinner = `<div class="spinner">
        <svg>
          <use href="${_imgIconsSvgDefault.default}#icon-loader"></use>
        </svg>
        </div>`;
    this.clear();
    this.parentElement.insertAdjacentHTML('afterbegin', spinner);
  };
  generateMarkup() {
    return `
            <figure class="recipe__fig">
            <img src="${this.data.image}" alt="${this.data.title}" class="recipe__img" />
            <h1 class="recipe__title">
            <span>${this.data.title}</span>
            </h1>
        </figure>

        <div class="recipe__details">
            <div class="recipe__info">
            <svg class="recipe__info-icon">
                <use href="${_imgIconsSvgDefault.default}#icon-clock"></use>
            </svg>
            <span class="recipe__info-data recipe__info-data--minutes">${this.data.cookingTime}</span>
            <span class="recipe__info-text">minutes</span>
            </div>
            <div class="recipe__info">
            <svg class="recipe__info-icon">
                <use href="${_imgIconsSvgDefault.default}#icon-users"></use>
            </svg>
            <span class="recipe__info-data recipe__info-data--people">4</span>
            <span class="recipe__info-text">servings</span>

            <div class="recipe__info-buttons">
                <button class="btn--tiny btn--increase-servings">
                <svg>
                    <use href="${_imgIconsSvgDefault.default}#icon-minus-circle"></use>
                </svg>
                </button>
                <button class="btn--tiny btn--increase-servings">
                <svg>
                    <use href="${_imgIconsSvgDefault.default}#icon-plus-circle"></use>
                </svg>
                </button>
            </div>
            </div>

            <div class="recipe__user-generated">
            <svg>
                <use href="${_imgIconsSvgDefault.default}#icon-user"></use>
            </svg>
            </div>
            <button class="btn--round">
            <svg class="">
                <use href="${_imgIconsSvgDefault.default}#icon-bookmark-fill"></use>
            </svg>
            </button>
        </div>

        <div class="recipe__ingredients">
            <h2 class="heading--2">Recipe ingredients</h2>
            <ul class="recipe__ingredient-list">
            ${this.data.ingredients.map(ing => this.#undefined(ing)).join('')}
            

            <li class="recipe__ingredient">
                <svg class="recipe__icon">
                <use href="${_imgIconsSvgDefault.default}#icon-check"></use>
                </svg>
                <div class="recipe__quantity">0.5</div>
                <div class="recipe__description">
                <span class="recipe__unit">cup</span>
                ricotta cheese
                </div>
            </li>
            </ul>
        </div>

        <div class="recipe__directions">
            <h2 class="heading--2">How to cook it</h2>
            <p class="recipe__directions-text">
            This recipe was carefully designed and tested by
            <span class="recipe__publisher">The Pioneer Woman</span>. Please check out
            directions at their website.
            </p>
            <a
            class="btn--small recipe__btn"
            href=${this.data.sourceUrl}
            target="_blank"
            >
            <span>Directions</span>
            <svg class="search__icon">
                <use href="${_imgIconsSvgDefault.default}#icon-arrow-right"></use>
            </svg>
            </a>
        </div>`;
  }
  #undefined(ing) {
    return `
        <li class="recipe__ingredient">
            <svg class="recipe__icon">
            <use href="${_imgIconsSvgDefault.default}#icon-check"></use>
            </svg>
            <div class="recipe__quantity">${ing.quantity ? new _fractional.Fraction(ing.quantity).toString() : ''}</div>
            <div class="recipe__description">
            <span class="recipe__unit">${ing.unit}</span>
            ${ing.description}
            </div>
        </li>
        `;
  }
}
exports.default = new RecipeView();
